{"version":3,"file":"static/js/35.873a0259.chunk.js","mappings":"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","sources":["components/contacts/Contact.js","components/contacts/Contacts.js","components/filter/Filter.js","redux/selectors.js","components/phonebook/Phonebook.js","pages/PhoneContacts.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\n\n\nexport const Contact = ({ name }) => {\n     \n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(name.id));\n\n    return (<>\n        <p>{name.name}:{name.number}</p>\n                               \n                <button type=\"button\" onClick={handleDelete}>DELETE</button>\n    </>)\n}","import { Contact } from \"./Contact\"\n\n\nconst Contacts = ({ names }) => {\n        return (\n            <ul>\n                   {\n                       names.map(name => (\n                           <li key={name.id}>\n                               <Contact name={name} />\n                            </li>))}\n            </ul>\n        )\n    \n}\n\nexport default Contacts\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n// import { setFilter } from \"redux/actions\";\nimport { setContactsFilter } from \"redux/filterSlice\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n      const [filter, setFilter] = useState('');\n    const changeFilter = e => {\n\n        // e.preventDefault();\n        // const form = e.target;\n        console.log(e.currentTarget.value);\n        setFilter(e.currentTarget.value.toLowerCase())\n        dispatch(setContactsFilter(e.currentTarget.value));\n\n        // onSubmit({ name, number });\n        //   dispatch(addContact(form.elements.name.value));\n        // form.reset();\n    \n    };\n\n    return (<div>\n        <h2>filter</h2>\n        <form>\n            <label for=\"filter\">\n                find contacts by name\n            </label>\n            <input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={changeFilter}\n                \n            ></input>\n                </form>  \n        </div>\n       \n    )\n}","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterValue = state => state.filter.value;","import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n// import { addContact } from \"redux/actions\";\n// import { addContact } from \"redux/contactSlice\";\nimport { addContact } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\n\nexport const Phonebook = () => {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    console.log(contacts);\n\n    const doesContactExist = newName => {\n    return contacts.some(\n      contact => contact.name.toLowerCase() === newName.toLowerCase()\n    );\n  };\n  \n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.target;       \n        console.log(e.target.elements.number);\n        console.log(name, number);\n\n        if (doesContactExist(form.elements.name.value))\n        {\n            alert(\n                `user ${name} is already in the contact list`\n            );\n            return;\n}\n\n        // dispatch(addContact({ name: form.elements.name.value, number: form.elements.number.value }));\n        dispatch(addContact({ name, number}));\n        \n        setName('');\n        setNumber('');\n        // form.reset();\n    \n    };\n\n    \n\n        return (<div>\n            <h2>PHONEBOOK</h2>\n            <form onSubmit={handleSubmit}>\n                <label for=\"name\">\n                    NAME\n                </label>\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    value={name}\n                    onChange={e => setName(e.target.value)}\n                    required\n                ></input>\n                <label for=\"number\">\n                    TEL NUMBER\n                </label>\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    value={number}\n                    onChange={e => setNumber(e.target.value)}\n                    required\n                ></input>\n                <button type=\"submit\">ADD CONTACT</button>\n\n            </form>\n        </div>\n       \n        )\n    \n}\n\n// export default Phonebook\n\n// onSubmit={this.handleSubmit}","import Contacts from \"components/contacts/Contacts\";\nimport { Filter } from \"components/filter/Filter\";\nimport { Phonebook } from \"components/phonebook/Phonebook\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectFilterValue } from \"redux/selectors\";\n\nconst PhoneContacts = () => {\n\n    const dispatch = useDispatch();\n \n  const contacts = useSelector(state => state.contacts.items);\n  const filtered=useSelector(selectFilterValue);\n  \n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n        \n   const filteredContacts = () => {\n    \n     return contacts.filter(contact => \n         contact.name.toLowerCase().includes(filtered.toLowerCase())\n         \n    );\n  };\n\n\n    return (\n        // <>\n        //     <div>contacts somwhere here</div>\n            \n        // </>\n        <div\n        style={{\n          display: 'flex',\n          flexDirection:'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          fontSize: 40,\n          color: '#010101'\n        }}\n      >\n        <Phonebook  />\n            <Filter />\n        {contacts.length > 0 ? (\n          <Contacts\n            names={filteredContacts()}\n                      />\n        ) : (\n          <span text=\"Contact list is empty.\"> \"Contact list is empty.\"</span>\n        )}\n        \n        </div>\n        \n    );\n};\nexport default PhoneContacts;"],"names":["Contact","name","dispatch","useDispatch","number","type","onClick","deleteContact","id","names","map","Filter","useState","filter","setFilter","for","value","onChange","e","console","log","currentTarget","toLowerCase","setContactsFilter","selectContacts","state","contacts","items","selectFilterValue","Phonebook","setName","setNumber","useSelector","onSubmit","preventDefault","newName","form","target","elements","some","contact","alert","addContact","title","required","filtered","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color","length","includes","text"],"sourceRoot":""}